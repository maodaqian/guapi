// 加
function add(a, b) {
    var c, d, e;
    try {
        c = a.toString().split(".")[1].length;
    } catch (f) {
        c = 0;
    }
    try {
        d = b.toString().split(".")[1].length;
    } catch (f) {
        d = 0;
    }
     e = Math.pow(10, Math.max(c, d))
    return (mul(a, e) + mul(b, e)) / e;
}
// 减
function sub(a, b) {
    var c, d, e;
    try {
        c = a.toString().split(".")[1].length;
    } catch (f) {
        c = 0;
    }
    try {
        d = b.toString().split(".")[1].length;
    } catch (f) {
        d = 0;
    }
    e = Math.pow(10, Math.max(c, d))
    return (mul(a, e) - mul(b, e)) / e;
}
// 乘
function mul(a, b) {
    var c = 0,
        d = a.toString(),
        e = b.toString();
    try {
        c += d.split(".")[1].length;
    } catch (f) {}
    try {
        c += e.split(".")[1].length;
    } catch (f) {}
    return Number(d.replace(".", "")) * Number(e.replace(".", "")) / Math.pow(10, c);
}
// 除
function div(a, b) {
    var c, d, e = 0,
        f = 0;
    try {
        e = a.toString().split(".")[1].length;
    } catch (g) {}
    try {
        f = b.toString().split(".")[1].length;
    } catch (g) {}

    c = Number(a.toString().replace(".", ""));
    d = Number(b.toString().replace(".", ""))
    return  mul(c / d, Math.pow(10, f - e));
}

// example: (1).add(2) return 3
Number.prototype.add = function (arg) {
    return add(this, arg);
};
// example: (1).sub(2) return -1
Number.prototype.sub = function (arg) {
    return sub(this, arg);
};
// example: (1).mul(2) return 2
Number.prototype.mul = function (arg) {
    return mul(this, arg);
};
// example: (1).div(2) return 0.5
Number.prototype.div = function (arg) {
    return div(this, arg);
};